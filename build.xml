<project name="${webapp}" default="compile" basedir=".">
	<import file="${catalina.home}/bin/catalina-tasks.xml" />
	
	<property name="app.name"              value="${webapp}" />
	
	<!-- tomcat.home should be set by build.bat or build.csh. -->
	<property name="domain.dir"            value="${tomcat.home}/webapps/${webapp}" />
	<property name="webinf.dir"            value="${domain.dir}/WEB-INF" />
	
	<!-- build.dir contains the classes for the main application -->
	<property name="build.dir"             value="${webinf.dir}/classes/" />
	<property name="tomcat.lib.dir"        value="${tomcat.home}/lib" />
	
	<!-- lib.dir contains the library files (mostly .jars) that are not custom code -->
	<property name="lib.dir"               value="${webinf.dir}/lib" />
	
	<property name="etc.dir"               value="${user.home}/scobolsolo/etc" />
	<property name="opals.generated.to"    value="${user.home}/scobolsolo/src" />
	
	<property name="javadoc.dir"           value="${domain.dir}/admin/javadoc" />
	<property name="scobolsolo.source.dir" value="${user.home}/scobolsolo/src/" />
	
	<property name="doclib.dir" value="doclib"/>
	<property name="doclib.temp.dir" value="${doclib.dir}/temp" />
	
	<property name="web.dir" value="web" />
	<property name="webcomponents.dir" value="web-components" />
	<property name="scss.sourcedir" value="${webcomponents.dir}/scss/" />
	<property name="scss.sourcefile" value="main.scss" />
	<property name="scss.targetfile" value="${web.dir}/template/style.css" /> 
	
	<path id="project.class.path">
		<fileset dir="${tomcat.lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${lib.dir}/activation-1.1.1.jar" />
		<!-- <pathelement location="${lib.dir}/commons-codec-1.10.jar" /> -->
		<pathelement location="${lib.dir}/commons-collections4-4.1.jar" />
		<pathelement location="${lib.dir}/commons-email-1.4.jar" />
		<pathelement location="${lib.dir}/commons-exec-1.3.jar" />
		<pathelement location="${lib.dir}/commons-fileupload-1.3.2.jar" />
		<pathelement location="${lib.dir}/commons-io-2.5.jar" />
		<pathelement location="${lib.dir}/commons-lang3-3.4.jar" />
<!-- 		<pathelement location="${lib.dir}/commons-logging-1.2.jar" /> -->
		<pathelement location="${lib.dir}/commons-math3-3.6.1.jar" />
		<pathelement location="${lib.dir}/commons-validator-1.5.1.jar" />
		<!-- <pathelement location="${lib.dir}/dom4j-1.6.1.jar" /> -->
		<pathelement location="${lib.dir}/fluent-hc-4.5.2.jar" />
		<pathelement location="${lib.dir}/gson-2.6.2.jar" />
		<pathelement location="${lib.dir}/guava-19.0.jar" />
		<pathelement location="${lib.dir}/httpclient-4.5.2.jar" />
		<pathelement location="${lib.dir}/httpclient-cache-4.5.2.jar" />
		<pathelement location="${lib.dir}/httpcore-4.4.4.jar" />
		<pathelement location="${lib.dir}/httpmime-4.5.2.jar" />
		<pathelement location="${lib.dir}/javax.mail.jar" />
		<!-- <pathelement location="${lib.dir}/jlatexmath-1.0.3.jar" /> -->
		<pathelement location="${lib.dir}/jtds-1.3.1.jar" />
		<pathelement location="${lib.dir}/log4j-1.2.17.jar" />
		<pathelement location="${lib.dir}/poi-3.14.jar" />
		<pathelement location="${lib.dir}/poi-excelant-3.14.jar" />
		<pathelement location="${lib.dir}/poi-ooxml-3.14.jar" />
		<pathelement location="${lib.dir}/poi-ooxml-schemas-3.14.jar" />
		<pathelement location="${lib.dir}/postgresql-9.4.1208.jar" />
		<!-- <pathelement location="${lib.dir}/sendgrid-java.jar" /> -->
		<!-- <pathelement location="${lib.dir}/stax-api-1.0.1.jar" /> -->
		<pathelement location="${lib.dir}/xmlbeans-2.6.0.jar" />
		
		<pathelement location="${lib.dir}/siliconage.jar" />
		<pathelement location="${lib.dir}/opal.jar" />
	</path>
 
	<property name="jsp.dir" value="${domain.dir}" />
	<property name="jsp.src.dir" value="${jsp.dir}/WEB-INF/src" />
	
	<target name="clean">
		<delete dir="${tomcat.home}/work" />
		<delete dir="${lib.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${jsp.src.dir}" />
	</target>
	
	<target name="prepare" depends="scss">
		<copy file="etc/web.xml" tofile="${webinf.dir}/web.xml" />
		
		<filter token="WEBAPP_DOMAIN" value="${webapp.domain}" />
		<copy file="etc/rewrite.config" tofile="${webinf.dir}/rewrite.config" filtering="true" />
		
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
		<sync todir="${lib.dir}">
			<fileset dir="lib">
				<exclude name="**/*.bak,**/*~" />
			</fileset>
			<preserveintarget>
				<include name="scobolsolo-bcrypt.jar" />
			</preserveintarget>
		</sync>
		
		<copy file="${server.properties.file}" tofile="${build.dir}/com/scobolsolo/server.properties" />
		<copy file="etc/scobolsolo/application.properties" tofile="${build.dir}/com/scobolsolo/application.properties" />
		<copy file="etc/scobolsolo/authentication.properties" tofile="${build.dir}/com/scobolsolo/authentication.properties" />
		<copy file="etc/scobolsolo/twitter4j.properties" tofile="${build.dir}/twitter4j.properties" />
		<copy file="etc/log4j.properties" tofile="${build.dir}/log4j.properties" />
		
		<sync todir="${jsp.dir}">
			<fileset dir="web" includes="**/*" />
			<preserveintarget>
				<include name="WEB-INF/" />
				<include name="admin/javadoc/**" />
			</preserveintarget>
		</sync>
	</target>
	
	<!-- Compile SCSS to CSS -->
	<target name="scss">
		<exec dir="${scss.sourcedir}" executable="sass" output="${scss.targetfile}">
			<arg value="${scss.sourcefile}" />
			<arg value="--style" />
			<arg value="compressed" />
		</exec>
	</target>
	
	<!-- This compiles the .jsp pages to .java files in the ${jsp.src.dir} directory.
		The regular javac task will then compile them, but the compiled .class files are not
		used by the Tomcat engine.  -->
	<target name="jspc" depends="prepare">
		<mkdir dir="${jsp.src.dir}" />
		<jasper
			validateXml="false"
			uriroot="${jsp.dir}"
			webXmlFragment="${jsp.dir}/WEB-INF/generated_web.xml"
			outputDir="${jsp.src.dir}"
		/>
	</target>
	
	<target name="warnings" depends="prepare,jspc">
		<javac 
			srcdir="src" 
			destdir="${build.dir}"
			debug="on" 
			optimize="off" 
			deprecation="on"
			includeantruntime="false"
			excludes="**/package.html,**.*.bak,**/*~,"
			verbose="off"
		>
			<classpath refid="project.class.path" />
			<src path="src" />
			<src path="${jsp.dir}/WEB-INF/src" />
			<compilerarg value="-Xlint:cast" />
			<compilerarg value="-Xlint:divzero" />
			<compilerarg value="-Xlint:empty" />
			<compilerarg value="-Xlint:fallthrough" />
			<compilerarg value="-Xlint:finally" />
			<compilerarg value="-Xlint:overrides" />
			<compilerarg value="-Xlint:path" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		
		<jar destfile="${lib.dir}/scobolsolo-bcrypt.jar">
			<fileset dir="${build.dir}" includes="com/scobolsolo/security/BCrypt.class,com/scobolsolo/security/BCryptDataSourceRealm.class" />
		</jar>
	</target>
	
	<target name="compile" depends="prepare,jspc">
		<javac 
			srcdir="src" 
			destdir="${build.dir}"
			debug="on" 
			optimize="off" 
			deprecation="off"
			includeantruntime="false"
			excludes="**/package.html,**.*.bak,**/*~,**/statistics/**"
			encoding="UTF-8"
			verbose="off"
		>
			<classpath refid="project.class.path" />
			<src path="src" />
			<src path="${jsp.dir}/WEB-INF/src" />
		</javac>
		
		<jar destfile="${lib.dir}/scobolsolo-bcrypt.jar">
			<fileset dir="${build.dir}" includes="com/scobolsolo/security/BCrypt.class,com/scobolsolo/security/BCryptDataSourceRealm.class" />
		</jar>
	</target>
	
	<target name="all" depends="clean,compile">
	</target>
	
	<target name="opals" depends="prepare">
		<java classname="com.opal.creator.XMLCreator">
			<classpath>
				<path refid="project.class.path" />
				<pathelement location="${webinf.dir}/classes/" />
			</classpath>
			<arg value="${etc.dir}/opal-configuration.xml" />
			<arg value="${opals.generated.to}" />
			<arg value="${database.username}" />
			<arg value="${database.password}" />
		</java>
	</target>
	
	<target name="tomcat-setup">
		<mkdir dir="${tomcat.home}" />
		<symlink overwrite="true" link="${tomcat.home}/bin" resource="${catalina.home}/bin" />
		<mkdir dir="${tomcat.lib.dir}" />
		<sync todir="${tomcat.lib.dir}">
			<fileset dir="${catalina.home}/lib" />
		</sync>
		<mkdir dir="${tomcat.home}/logs" />
		<mkdir dir="${tomcat.home}/temp" />
		<mkdir dir="${tomcat.home}/work" />
		<mkdir dir="${tomcat.home}/webapps" />
		<mkdir dir="${tomcat.home}/conf" />
		<copy todir="${tomcat.home}/conf">
			<!-- Copy production configuration, except for server.xml -->
			<fileset dir="${catalina.home}/conf">
				<exclude name="server.xml" />
				<exclude name="Catalina" />
				<exclude name="Catalina/**" />
			</fileset>
		</copy>
		
		<!-- Use the server.xml template for development environments -->
		<filter token="TOMCAT_HTTP_PORT" value="${tomcat.http.port}" />
		<filter token="SHUTDOWN_PORT" value="${tomcat.shutdown.port}" />
		<filter token="TOMCAT_HOME" value="${tomcat.home}" />
		<filter token="DATABASE_USERNAME" value="${database.username}" />
		<filter token="DATABASE_PASSWORD" value="${database.password}" />
		<copy file="etc/server.xml" tofile="${tomcat.home}/conf/server.xml" overwrite="true" filtering="true" />
	</target>
	
	<target name="instance" depends="tomcat-setup,compile" />
	
	<target name="javadoc" depends="prepare">
		<!-- javadoc can't operate on the .jar files, so unjar them temporarily to be used as source inputs -->
		<delete dir="${doclib.temp.dir}"/>
        <delete dir="${javadoc.dir}" />
		<unjar dest="${doclib.temp.dir}">
			<fileset dir="${doclib.dir}">
				<include name="*.jar"/>
			</fileset>
		</unjar>
		<javadoc destdir="${javadoc.dir}" 
			author="false" 
			version="false" 
			use="true" 
			windowtitle="Scobol Solo Javadoc" 
			bottom="Copyright Jonah Greenthal" 
			access="private">
			<classpath refid="project.class.path"/> 
			<fileset dir="${scobolsolo.source.dir}"/> 
			<fileset dir="doclib/temp"/>
		</javadoc> 
		<delete dir="${doclib.temp.dir}"/>
	</target>
</project>
